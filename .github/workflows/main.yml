name: CI Pipeline
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: "15 7 * * *" # Nightly build at 7:15 AM (UDT)
  workflow_dispatch:  # This enables manual triggering

jobs:
  linux_amd64:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux-amd64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check linux version
        run: uname -a
      - name: build/test
        run: |
          make clean test CC=gcc MEMSAN=1
          make clean test CC=clang MEMSAN=1
          make clean all CC=gcc
          make clean all CC=clang
          ldd lib/libfam.so  | grep "statically linked" || { echo "not statically linked!"; exit 1; }
          UNDEFINED_COUNT=$(nm lib/libfam.so | grep " U " | grep -v "U environ" | wc -l)
          if [ "$UNDEFINED_COUNT" -ne 0 ]; then
            echo "Error: Found $UNDEFINED_COUNT undefined symbols other than environ"
            exit 1
          fi
      - name: coverage
        run: |
          mkdir -p ../_coverage/
          git clone https://anything:${{ secrets.LIBFAM_PAT}}@github.com/myfamilyorg/libfam.git ../_coverage/libfam
          #./scripts/coverage.sh || exit 1;
          #./scripts/update_code_coverage.sh
          #cp docs/code_coverage.html ../_coverage/libfam/docs
          #cp README.md ../_coverage/libfam
          #cd ../_coverage/libfam
          #git config user.name "Coverage-Bot"
          #git config user.email "noreply@pipeline.com"
          #git commit -am "Coverage-Bot: Updated repo (via main.yml script) Source Version is $GITHUB_SHA";
          #if [[ "$GITHUB_EVENT_NAME" == "schedule" || "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
          #  git push https://${{ secrets.LIBFAM_PAT}}@github.com/myfamilyorg/libfam.git
          #fi
  linux_aarch64:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        platform: [linux-aarch64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check linux version
        run: uname -a
      - name: build/test
        run: |
          make clean test CC=gcc MEMSAN=1
          make clean test CC=clang MEMSAN=1
          make clean all CC=gcc
          make clean all CC=clang
          ldd lib/libfam.so  | grep "statically linked" || { echo "not statically linked!"; exit 1; }
          UNDEFINED_COUNT=$(nm lib/libfam.so | grep " U " | grep -v "U environ" | wc -l)
          if [ "$UNDEFINED_COUNT" -ne 0 ]; then
            echo "Error: Found $UNDEFINED_COUNT undefined symbols other than environ"
            exit 1
          fi
      - name: coverage
        run: |
          #./scripts/coverage.sh || exit 1;
          echo "coverage disabled"
